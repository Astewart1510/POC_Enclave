// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

enclave {
    from "sgx_env.edl" import *;
    from "sgx_tstd.edl" import *;
    from "sgx_stdio.edl" import *;
    from "sgx_backtrace.edl" import *;
    from "sgx_tstdc.edl" import *;
    from "sgx_tprotected_fs.edl" import *;
    /* from "sgx_fs.edl" import *; */
    /* from "sgx_file.edl" import *; */

    include "sgx_tprotected_fs.h"
    

   

    trusted {
        /* define ECALLs here. */

        
        public sgx_status_t seal_encrypted_data([in, size=cipher_text_len] const uint8_t* cipher_text, size_t cipher_text_len, [out, size=sealed_cipher_text_len] uint8_t* sealed_cipher_text, size_t sealed_cipher_text_len, [out] int64_t* sealed_length_for_trimming);
        public sgx_status_t unseal_aes_encrypt([in, size=sealed_data_received_len] const uint8_t* sealed_data_received, size_t sealed_data_received_len, [out, size=aes_encrypted_placeholder_len] uint8_t* aes_encrypted_placeholder, size_t aes_encrypted_placeholder_len, [out] int64_t* aes_encrypted_length);



    };
     untrusted {
        /* define OCALLs here. */
        /* TODO Fix the in and out stuff! */
      
    };
};
